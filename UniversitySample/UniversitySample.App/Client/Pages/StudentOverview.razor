@attribute [Authorize(Roles="Administrator")]
@page "/studentOverview"
@using UniversitySample.App.Shared
@using UniversitySample.App.Client.ApiClient
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject StudentServiceClient StudentServiceClient
@inject ISnackbar Snackbar

<PageTitle>Student Overview</PageTitle>

<h1>Student Overview</h1>

<p>This is a list of all students</p>

@if (students == null)
{
    <p><MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" /></p>
}
else
{
    @if (students.Count > 0)
    {
        <MudDataGrid T="StudentDetailsDto" MultiSelection="true" Items="@students" Sortable="true" Filterable="true" Hideable="true">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Students</MudText>
                <MudSpacer/>
            </ToolBarContent>
            <Columns>
                <SelectColumn T="StudentDetailsDto"/>
                <Column T="StudentDetailsDto" Field="@nameof(StudentDetailsDto.Username)" Title="Username"/>
                <Column T="StudentDetailsDto" Field="@nameof(StudentDetailsDto.FirstName)"/>
                <Column T="StudentDetailsDto" Field="@nameof(StudentDetailsDto.LastName)"/>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="StudentDetailsDto"/>
            </PagerContent>
        </MudDataGrid>
    }
    else
    {
        <p>Es sind aktuell keine Studenten vorhanden.</p>
    }
}

@code {
    private ICollection<StudentDetailsDto>? students;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            students = await StudentServiceClient.GetAllAsync();
        }
        catch (Exception e)
        {
            Snackbar.Add("Sorry, an error occured, please try again", Severity.Error);
        }
    }
}
